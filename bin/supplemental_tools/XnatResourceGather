#!/usr/bin/env python

from dax import XnatUtils
import argparse


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--proj', dest='project', help='Project name', required=True)
    parser.add_argument('--subj', dest='subject', help='Subject ID', required=True)
    parser.add_argument('--sess', dest='session', help='Session ID', required=True)
    return parser


# TO DO: Funtion to grab assessor inputs
#def input_grab():


if __name__ == '__main__':
    PARSER = parse_args()
    OPTIONS = PARSER.parse_args()

    project = OPTIONS.project
    subject = OPTIONS.subject
    session = OPTIONS.session

    print('Project: {}'.format(project))
    print('Subject: {}'.format(subject))
    print('Session: {}'.format(session))
    print('Assessors:')

    # Get assessor list given proj/subj/sess
    with XnatUtils.get_interface() as xnat:
        assessors = xnat.get_assessors(project,subject,session)

    # Loop through assessors
    for assessor in assessors:
        assessor_string = xnat.get_assessor_path(project,subject,session,assessor['assessor_label'])
        assessor_obj = xnat.select(assessor_string)

        # Split assessor_obj string for printing
        assess = str(assessor_obj)
        assess = assess.split(' ')

        print('  - assessor_label: {}'.format(assess[2]))

        # Gather assessor inputs
        inputs = XnatUtils.get_assessor_inputs(assessor_obj)

        # If assessor has inputs, print them out here; otherwise say no inputs
        if inputs:
            values = list(inputs.values())
            print('    inputs:')
            cnt = 1
            for x,y in inputs.items():
                val = y.split('/')
                print('      - {}: {}'.format(x,val[8:]))
                cnt += 1
        else:
            print('    inputs: NO INPUTS FOUND')
